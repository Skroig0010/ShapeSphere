// Generated by Haxe 4.0.0 (git build development @ a018cbd)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function() { };
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.array = function(it) {
	var a = [];
	var i = $iterator(it)();
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.flatten = function(it) {
	var l = new haxe_ds_List();
	var e = $iterator(it)();
	while(e.hasNext()) {
		var e1 = e.next();
		var x = $iterator(e1)();
		while(x.hasNext()) {
			var x1 = x.next();
			l.add(x1);
		}
	}
	return l;
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = true;
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = true;
haxe_ds_List.prototype = {
	add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new haxe_ds__$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = true;
haxe_ds__$List_ListNode.prototype = {
	__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
haxe_ds__$List_ListIterator.__name__ = true;
haxe_ds__$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Error = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i32ToFloat = function(i) {
	haxe_io_FPHelper.helper.setInt32(0,i,true);
	return haxe_io_FPHelper.helper.getFloat32(0,true);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	haxe_io_FPHelper.helper.setFloat32(0,f,true);
	return haxe_io_FPHelper.helper.getInt32(0,true);
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	haxe_io_FPHelper.helper.setFloat64(0,v,true);
	i64.low = haxe_io_FPHelper.helper.getInt32(0,true);
	i64.high = haxe_io_FPHelper.helper.getInt32(4,true);
	return i64;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.alert = function(v) {
	window.alert(js_Boot.__string_rec(v,""));
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g1 = 0;
		var _g = len;
		while(_g1 < _g) {
			var i = _g1++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
js_html_compat_ArrayBuffer.__name__ = true;
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null ? null : end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	this.offset = byteOffset == null ? 0 : byteOffset;
	this.length = byteLength == null ? buffer.byteLength - this.offset : byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.byteLength = this.length;
	this.byteOffset = this.offset;
	this.buffer = this.buf;
};
js_html_compat_DataView.__name__ = true;
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) {
			return v - 256;
		} else {
			return v;
		}
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) {
			return v - 65536;
		} else {
			return v;
		}
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) {
			return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8;
		} else {
			return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
		}
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) {
			return a | b << 8 | c << 16 | d << 24;
		} else {
			return d | c << 8 | b << 16 | a << 24;
		}
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) {
			return v + 4294967296.;
		} else {
			return v;
		}
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian ? a : b,littleEndian ? b : a);
	}
	,setInt8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value < 0 ? value + 128 & 255 : value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0 ? value + 65536 : value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Float32Array = function() { };
js_html_compat_Float32Array.__name__ = true;
js_html_compat_Float32Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		var _g2 = [];
		var _g21 = 0;
		var _g11 = arr.length << 2;
		while(_g21 < _g11) {
			var i1 = _g21++;
			_g2.push(0);
		}
		arr.buffer = new js_html_compat_ArrayBuffer(_g2);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset >> 2;
		}
		arr = [];
		var _g12 = 0;
		var _g3 = length;
		while(_g12 < _g3) {
			var i2 = _g12++;
			var val = buffer.a[offset++] | buffer.a[offset++] << 8 | buffer.a[offset++] << 16 | buffer.a[offset++] << 24;
			arr.push(haxe_io_FPHelper.i32ToFloat(val));
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		var buffer1 = [];
		var _g4 = 0;
		while(_g4 < arr.length) {
			var f = arr[_g4];
			++_g4;
			var i3 = haxe_io_FPHelper.floatToI32(f);
			buffer1.push(i3 & 255);
			buffer1.push(i3 >> 8 & 255);
			buffer1.push(i3 >> 16 & 255);
			buffer1.push(i3 >>> 24);
		}
		arr.byteLength = arr.length << 2;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(buffer1);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Float32Array._subarray;
	arr.set = js_html_compat_Float32Array._set;
	return arr;
};
js_html_compat_Float32Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Float32Array._subarray = function(start,end) {
	var a = js_html_compat_Float32Array._new(this.slice(start,end));
	a.byteOffset = start * 4;
	return a;
};
var js_html_compat_Uint8Array = function() { };
js_html_compat_Uint8Array.__name__ = true;
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g1 = 0;
		var _g = arg1;
		while(_g1 < _g) {
			var i = _g1++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) {
			offset = 0;
		}
		if(length == null) {
			length = buffer.byteLength - offset;
		}
		if(offset == 0) {
			arr = buffer.a;
		} else {
			arr = buffer.a.slice(offset,offset + length);
		}
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else {
		throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	}
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			this[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > this.byteLength) {
			throw new js__$Boot_HaxeError("set() outside of range");
		}
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this[i1 + offset] = a1[i1];
		}
	} else {
		throw new js__$Boot_HaxeError("TODO");
	}
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var a = js_html_compat_Uint8Array._new(this.slice(start,end));
	a.byteOffset = start;
	return a;
};
var src_Game = function() { };
src_Game.__name__ = true;
src_Game.main = function() {
	src_Game.init();
	var vert = window.fetch("main.vert").then(function(response) {
		return response.text();
	});
	var frag = window.fetch("main.frag").then(function(response1) {
		return response1.text();
	});
	var mqo = window.fetch("sample.mqo").then(function(response2) {
		return response2.text();
	});
	var tex = new Promise(function(resolve,reject) {
		new src_graphics_Texture("sample.png",resolve);
	});
	Promise.all([vert,frag,tex]).then(function(response3) {
		var vert1 = js_Boot.__cast(response3[0] , String);
		var frag1 = js_Boot.__cast(response3[1] , String);
		var tex1 = js_Boot.__cast(response3[2] , src_graphics_Texture);
		var shader = new src_graphics_shader_Shader(vert1,frag1);
		src_Game.scene = new src_scene_Scene();
		var this1 = new src_math_Vec3Data(0,0.4,1);
		var eye = this1;
		var tmp = src_Game.scene;
		var l = Math.sqrt(eye.x * eye.x + eye.y * eye.y + eye.z * eye.z);
		var this2 = new src_math_Vec3Data(eye.x / l,eye.y / l,eye.z / l);
		var this3 = new src_math_Vec3Data(0,1,0);
		tmp.setCamera(eye,this2,this3);
		tex1.setFilter(src_graphics_states_TextureFilter.Point);
		var mat = new src_graphics_Material(src_Game.gd,shader,src_graphics_Color.Red,0.0,0.0,0.0,tex1);
		var this4 = new src_math_Vec3Data(0.0,0.5,0.0);
		var this5 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this6 = new src_math_Vec2Data(0.0,0.0);
		var vertices = new src_graphics_vertices_VertexPositionNormalTexture(this4,this5,this6);
		var this7 = new src_math_Vec3Data(0.5,0.0,0.5);
		var this8 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this9 = new src_math_Vec2Data(1.0,0.0);
		var vertices1 = new src_graphics_vertices_VertexPositionNormalTexture(this7,this8,this9);
		var this10 = new src_math_Vec3Data(-0.5,0.0,-0.5);
		var this11 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this12 = new src_math_Vec2Data(0.0,1.0);
		var vertices2 = Lambda.array(Lambda.flatten(Lambda.flatten([vertices,vertices1,new src_graphics_vertices_VertexPositionNormalTexture(this10,this11,this12)])));
		src_Game.mesh = new src_graphics_Mesh(src_Game.gd,src_Game.scene,vertices2,[0,1,2]);
		var meshpart = new src_graphics_MeshPart(src_Game.gd,mat,3,0,src_Game.mesh);
		src_Game.mesh.meshParts.add(meshpart);
		var this13 = new src_math_Vec3Data(0.0,0.5,0.0);
		var this14 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this15 = new src_math_Vec2Data(0.0,0.0);
		var vertices21 = new src_graphics_vertices_VertexPositionNormalTexture(this13,this14,this15);
		var this16 = new src_math_Vec3Data(0.5,0.0,-0.5);
		var this17 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this18 = new src_math_Vec2Data(0.0,1.0);
		var vertices22 = new src_graphics_vertices_VertexPositionNormalTexture(this16,this17,this18);
		var this19 = new src_math_Vec3Data(-0.5,0.0,0.5);
		var this20 = new src_math_Vec3Data(0.0,0.0,0.0);
		var this21 = new src_math_Vec2Data(1.0,1.0);
		var vertices23 = Lambda.array(Lambda.flatten(Lambda.flatten([vertices21,vertices22,new src_graphics_vertices_VertexPositionNormalTexture(this19,this20,this21)])));
		src_Game.mesh2 = new src_graphics_Mesh(src_Game.gd,src_Game.scene,vertices23,[0,1,2]);
		var meshpart2 = new src_graphics_MeshPart(src_Game.gd,mat,3,0,src_Game.mesh2);
		src_Game.mesh2.meshParts.add(meshpart2);
		window.requestAnimationFrame(src_Game.loop);
	});
};
src_Game.init = function() {
	var canvas = src_Game.createCanvas(640,480);
	src_Game.gd = new src_graphics_GraphicsDevice(canvas);
};
src_Game.createCanvas = function(width,height) {
	var canvas = js_Boot.__cast(window.document.createElement("canvas") , HTMLCanvasElement);
	canvas.width = width;
	canvas.height = height;
	window.document.body.appendChild(canvas);
	return canvas;
};
src_Game.loop = function(time) {
	window.requestAnimationFrame(src_Game.loop);
	var dt = time - src_Game.prevTime;
	src_Game.prevTime = time;
	src_Game.update(dt);
	src_Game.render(dt);
};
src_Game.update = function(dt) {
	var c = Math.cos(0.01);
	var s = Math.sin(0.01);
	var eye = src_Game.scene.camera.position;
	eye.x = eye.x * c - eye.z * s;
	eye.z = eye.x * s + eye.z * c;
	var l = Math.sqrt(eye.x * eye.x + eye.y * eye.y + eye.z * eye.z);
	var this1 = new src_math_Vec3Data(eye.x / l,eye.y / l,eye.z / l);
	src_Game.scene.camera.forward = this1;
};
src_Game.render = function(dt) {
	src_Game.gd.startRender();
	src_Game.mesh.render();
	src_Game.mesh2.render();
	src_Game.gd.endRender();
};
var src_camera_Camera = function(position,forward,up) {
	var tmp;
	if(position == null) {
		var this1 = new src_math_Vec3Data(0,0,0);
		tmp = this1;
	} else {
		tmp = position;
	}
	this.position = tmp;
	var tmp1;
	if(forward == null) {
		var this2 = new src_math_Vec3Data(0,0,0);
		tmp1 = this2;
	} else {
		tmp1 = forward;
	}
	this.forward = tmp1;
	var tmp2;
	if(up == null) {
		var this3 = new src_math_Vec3Data(0,0,0);
		tmp2 = this3;
	} else {
		tmp2 = up;
	}
	this.up = tmp2;
};
src_camera_Camera.__name__ = true;
src_camera_Camera.prototype = {
	__class__: src_camera_Camera
};
var src_content_ContentManager = function() { };
src_content_ContentManager.__name__ = true;
var src_content_contentreaders_ModelReader = function() { };
src_content_contentreaders_ModelReader.__name__ = true;
src_content_contentreaders_ModelReader.makeMesh = function(sourceText) {
};
src_content_contentreaders_ModelReader.prototype = {
	read: function(text) {
	}
	,__class__: src_content_contentreaders_ModelReader
};
var src_graphics_Color = { __ename__ : true, __constructs__ : ["Red","Green","Blue","Black","White","Rgb"] };
src_graphics_Color.Red = ["Red",0];
src_graphics_Color.Red.toString = $estr;
src_graphics_Color.Red.__enum__ = src_graphics_Color;
src_graphics_Color.Green = ["Green",1];
src_graphics_Color.Green.toString = $estr;
src_graphics_Color.Green.__enum__ = src_graphics_Color;
src_graphics_Color.Blue = ["Blue",2];
src_graphics_Color.Blue.toString = $estr;
src_graphics_Color.Blue.__enum__ = src_graphics_Color;
src_graphics_Color.Black = ["Black",3];
src_graphics_Color.Black.toString = $estr;
src_graphics_Color.Black.__enum__ = src_graphics_Color;
src_graphics_Color.White = ["White",4];
src_graphics_Color.White.toString = $estr;
src_graphics_Color.White.__enum__ = src_graphics_Color;
src_graphics_Color.Rgb = function(r,g,b) { var $x = ["Rgb",5,r,g,b]; $x.__enum__ = src_graphics_Color; $x.toString = $estr; return $x; };
var src_graphics_GraphicsDevice = function(canvas) {
	try {
		src_graphics_GraphicsDevice.gl = canvas.getContext("webgl");
		if(src_graphics_GraphicsDevice.gl == null) {
			js_Browser.alert("Could not initialize WebGL");
		}
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		js_Browser.alert(e);
	}
	src_graphics_GraphicsDevice.gl.enable(2929);
	src_graphics_GraphicsDevice.gl.viewport(0,0,canvas.width,canvas.height);
	src_graphics_GraphicsDevice.gl.clearColor(0.0,0.0,0.0,1.0);
	src_graphics_GraphicsDevice.gl.clear(16640);
	src_graphics_GraphicsDevice.maxVertexAttributes = src_graphics_GraphicsDevice.gl.getParameter(34921);
};
src_graphics_GraphicsDevice.__name__ = true;
src_graphics_GraphicsDevice.prototype = {
	resize: function(width,height) {
		src_graphics_GraphicsDevice.gl.canvas.width = width;
		src_graphics_GraphicsDevice.gl.canvas.height = height;
		src_graphics_GraphicsDevice.gl.viewport(0,0,width,height);
	}
	,createArrayBuffer: function(vertices) {
		var buffer = src_graphics_GraphicsDevice.gl.createBuffer();
		src_graphics_GraphicsDevice.gl.bindBuffer(34962,buffer);
		src_graphics_GraphicsDevice.gl.bufferData(34962,new Float32Array(vertices),35044);
		src_graphics_GraphicsDevice.gl.bindBuffer(34962,null);
		return buffer;
	}
	,createIndexBuffer: function(indices) {
		var buffer = src_graphics_GraphicsDevice.gl.createBuffer();
		src_graphics_GraphicsDevice.gl.bindBuffer(34963,buffer);
		src_graphics_GraphicsDevice.gl.bufferData(34963,new Int16Array(indices),35044);
		src_graphics_GraphicsDevice.gl.bindBuffer(34963,null);
		return buffer;
	}
	,setVertexBuffer: function(buffer) {
		src_graphics_GraphicsDevice.gl.bindBuffer(34962,buffer);
	}
	,setIndexBuffer: function(buffer) {
		src_graphics_GraphicsDevice.gl.bindBuffer(34963,buffer);
	}
	,vertexAttribPointer: function(location,size,pointerType,normalized,stride,offset) {
		src_graphics_GraphicsDevice.gl.vertexAttribPointer(location,size,pointerType,normalized,stride,offset);
	}
	,uniform1i: function(location,x) {
		src_graphics_GraphicsDevice.gl.uniform1i(location,x);
	}
	,uniformMatrix4fv: function(location,matrix) {
		src_graphics_GraphicsDevice.gl.uniformMatrix4fv(location,false,matrix);
	}
	,drawElements: function(mode,offset,count,declaration,shader) {
		if(declaration != null) {
			declaration.gd = this;
			declaration.apply(shader,offset);
		}
		src_graphics_GraphicsDevice.gl.drawElements(mode,count,5123,offset);
	}
	,startRender: function() {
		src_graphics_GraphicsDevice.gl.clearColor(0,0,0,1);
		src_graphics_GraphicsDevice.gl.clear(16640);
	}
	,endRender: function() {
		src_graphics_GraphicsDevice.gl.flush();
	}
	,__class__: src_graphics_GraphicsDevice
};
var src_graphics_GraphicsExtensions = function() { };
src_graphics_GraphicsExtensions.__name__ = true;
src_graphics_GraphicsExtensions.numberOfElements = function(elementFormat) {
	switch(elementFormat[1]) {
	case 0:
		return 1;
	case 1:
		return 2;
	case 2:
		return 3;
	case 3:
		return 4;
	case 4:
		return 4;
	case 5:
		return 4;
	case 6:
		return 2;
	case 7:
		return 4;
	case 8:
		return 2;
	case 9:
		return 4;
	case 10:
		return 2;
	case 11:
		return 4;
	}
};
src_graphics_GraphicsExtensions.vertexAttribPointerType = function(elementFormat) {
	switch(elementFormat[1]) {
	case 0:
		return 5126;
	case 1:
		return 5126;
	case 2:
		return 5126;
	case 3:
		return 5126;
	case 4:
		return 5121;
	case 5:
		return 5121;
	case 6:
		return 5122;
	case 7:
		return 5122;
	case 8:
		return 5122;
	case 9:
		return 5122;
	case 10:
		return 36336;
	case 11:
		return 36336;
	}
};
src_graphics_GraphicsExtensions.vertexAttribNormalized = function(element) {
	if(element.usage == src_graphics_vertices_VertexElementUsage.Color) {
		return true;
	}
	var _g = element.format;
	switch(_g[1]) {
	case 8:
		return true;
	case 9:
		return true;
	default:
		return false;
	}
};
src_graphics_GraphicsExtensions.getName = function(usage) {
	switch(usage[1]) {
	case 0:
		return "Position";
	case 1:
		return "Color";
	case 2:
		return "TextureCoordinate";
	case 3:
		return "Normal";
	case 4:
		return "Binormal";
	case 5:
		return "Tangent";
	case 6:
		return "BlendIndices";
	case 7:
		return "BlendWeight";
	case 8:
		return "Depth";
	case 9:
		return "Fog";
	case 10:
		return "PointSize";
	case 11:
		return "Sample";
	case 12:
		return "TessellateFactor";
	}
};
src_graphics_GraphicsExtensions.getSize = function(elementFormat) {
	switch(elementFormat[1]) {
	case 0:
		return 4;
	case 1:
		return 8;
	case 2:
		return 12;
	case 3:
		return 16;
	case 4:
		return 4;
	case 5:
		return 4;
	case 6:
		return 4;
	case 7:
		return 8;
	case 8:
		return 4;
	case 9:
		return 8;
	case 10:
		return 4;
	case 11:
		return 8;
	}
};
var src_graphics_Material = function(gd,shader,col,dif,amb,spc,tex) {
	this.gd = gd;
	this.shader = shader;
	this.col = col;
	this.dif = dif;
	this.amb = amb;
	this.spc = spc;
	this.tex = tex;
	this.transMatrixLocation = shader.getUniformLocation("transMatrix");
	this.viewMatrixLocation = shader.getUniformLocation("viewMatrix");
	this.projMatrixLocation = shader.getUniformLocation("projMatrix");
	if(tex != null) {
		this.textureLocation = shader.getUniformLocation("texture");
	}
};
src_graphics_Material.__name__ = true;
src_graphics_Material.prototype = {
	apply: function(scene) {
		this.shader.useProgram();
		if(this.tex != null) {
			this.tex.useTexture();
			this.gd.uniform1i(this.textureLocation,0);
		}
		var tmp = this.gd;
		var tmp1 = this.transMatrixLocation;
		var this1 = new src_math_Mat4Data([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);
		tmp.uniformMatrix4fv(tmp1,src_math__$Mat4_Mat4_$Impl_$.toArray(this1));
		var tmp2 = this.gd;
		var tmp3 = this.viewMatrixLocation;
		var camera = scene.camera;
		var eye = camera.position;
		var forward = camera.forward;
		var up = camera.up;
		var this2 = new src_math_Vec3Data(up.y * forward.z - up.z * forward.y,up.z * forward.x - up.x * forward.z,up.x * forward.y - up.y * forward.x);
		var this3 = this2;
		var l = Math.sqrt(this3.x * this3.x + this3.y * this3.y + this3.z * this3.z);
		var this4 = new src_math_Vec3Data(this3.x / l,this3.y / l,this3.z / l);
		var side = this4;
		var this5 = new src_math_Vec3Data(forward.y * side.z - forward.z * side.y,forward.z * side.x - forward.x * side.z,forward.x * side.y - forward.y * side.x);
		var this6 = this5;
		var l1 = Math.sqrt(this6.x * this6.x + this6.y * this6.y + this6.z * this6.z);
		var this7 = new src_math_Vec3Data(this6.x / l1,this6.y / l1,this6.z / l1);
		up = this7;
		var this8 = new src_math_Mat4Data([side.x,up.x,forward.x,0,side.y,up.y,forward.y,0,side.z,up.z,forward.z,0,-(eye.x * side.x + eye.y * side.y + eye.z * side.z),-(eye.x * up.x + eye.y * up.y + eye.z * up.z),-(eye.x * forward.x + eye.y * forward.y + eye.z * forward.z),1]);
		tmp2.uniformMatrix4fv(tmp3,src_math__$Mat4_Mat4_$Impl_$.toArray(this8));
		var tmp4 = this.gd;
		var tmp5 = this.projMatrixLocation;
		var t = Math.tan(Math.PI / 2 / 2);
		var this9 = new src_math_Mat4Data([1 / t,0,0,0,0,1 / t,0,0,0,0,-1.04081632653061207,-1,0,0,-0.204081632653061201,0]);
		tmp4.uniformMatrix4fv(tmp5,src_math__$Mat4_Mat4_$Impl_$.toArray(this9));
	}
	,__class__: src_graphics_Material
};
var src_graphics_Mesh = function(gd,scene,vertices,indices) {
	this.gd = gd;
	this.scene = scene;
	this.id = src_graphics_Mesh.maxId++;
	this.visible = true;
	this.vertexBuffer = gd.createArrayBuffer(vertices);
	this.indexBuffer = gd.createIndexBuffer(indices);
	this.meshParts = new haxe_ds_List();
};
src_graphics_Mesh.__name__ = true;
src_graphics_Mesh.prototype = {
	render: function() {
		if(this.visible) {
			this.gd.setVertexBuffer(this.vertexBuffer);
			this.gd.setIndexBuffer(this.indexBuffer);
			var _g_head = this.meshParts.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var part = val;
				part.material.apply(this.scene);
				this.gd.drawElements(4,part.vertexOffset,part.numVertices,src_graphics_vertices_VertexPositionNormalTexture.vertexDeclaration,part.material.shader);
			}
		}
	}
	,__class__: src_graphics_Mesh
};
var src_graphics_MeshPart = function(gd,material,numVertices,vertexOffset,parent) {
	this.material = material;
	this.numVertices = numVertices;
	this.vertexOffset = vertexOffset;
	this.parent = parent;
};
src_graphics_MeshPart.__name__ = true;
src_graphics_MeshPart.prototype = {
	__class__: src_graphics_MeshPart
};
var src_graphics_Texture = function(src1,cont) {
	var _gthis = this;
	this.img = new Image();
	this.img.src = src1;
	this.img.onload = function(_) {
		src_graphics_GraphicsDevice.gl.activeTexture(33984);
		var texture = src_graphics_GraphicsDevice.gl.createTexture();
		src_graphics_GraphicsDevice.gl.bindTexture(3553,texture);
		src_graphics_GraphicsDevice.gl.texImage2D(3553,0,6408,6408,5121,_gthis.img);
		src_graphics_GraphicsDevice.gl.generateMipmap(3553);
		_gthis.tex = texture;
		cont(_gthis);
	};
};
src_graphics_Texture.__name__ = true;
src_graphics_Texture.prototype = {
	setFilter: function(filter) {
		src_graphics_GraphicsDevice.gl.bindTexture(3553,this.tex);
		switch(filter[1]) {
		case 0:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9729);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9729);
			break;
		case 1:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9728);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9728);
			break;
		case 2:
			throw new js__$Boot_HaxeError("Anisotropic filter isn't implemented");
		case 3:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9728);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9986);
			break;
		case 4:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9729);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9985);
			break;
		case 5:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9729);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9985);
			break;
		case 6:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9728);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9984);
			break;
		case 7:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9729);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9987);
			break;
		case 8:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10240,9728);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10241,9986);
			break;
		}
	}
	,setAddressMode: function(mode) {
		src_graphics_GraphicsDevice.gl.bindTexture(3553,this.tex);
		switch(mode[1]) {
		case 0:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10242,10497);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10243,10497);
			break;
		case 1:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10242,33071);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10243,33071);
			break;
		case 2:
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10242,33648);
			src_graphics_GraphicsDevice.gl.texParameteri(3553,10243,33648);
			break;
		}
	}
	,setParameterf: function(pname,param) {
		src_graphics_GraphicsDevice.gl.bindTexture(3553,this.tex);
		src_graphics_GraphicsDevice.gl.texParameterf(3553,pname,param);
	}
	,useTexture: function() {
		src_graphics_GraphicsDevice.gl.bindTexture(3553,this.tex);
	}
	,__class__: src_graphics_Texture
};
var src_graphics_shader_Shader = function(vertexShaderSource,fragmentShaderSource) {
	this.uniformLocations = new haxe_ds_StringMap();
	var vertexShader = this.getShader(35633,vertexShaderSource);
	var fragmentShader = this.getShader(35632,fragmentShaderSource);
	this.program = this.get_gl().createProgram();
	this.get_gl().attachShader(this.program,vertexShader);
	this.get_gl().attachShader(this.program,fragmentShader);
	this.get_gl().linkProgram(this.program);
	if(!this.get_gl().getProgramParameter(this.program,35714)) {
		js_Browser.alert("Could not initialize shaders");
	}
};
src_graphics_shader_Shader.__name__ = true;
src_graphics_shader_Shader.prototype = {
	get_gl: function() {
		return src_graphics_GraphicsDevice.gl;
	}
	,getAttribLocation: function(name) {
		var location = this.get_gl().getAttribLocation(this.program,name);
		this.get_gl().enableVertexAttribArray(location);
		return location;
	}
	,getUniformLocation: function(name) {
		var _this = this.uniformLocations;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = this.uniformLocations;
			if(__map_reserved[name] != null) {
				return _this1.getReserved(name);
			} else {
				return _this1.h[name];
			}
		}
		var location = this.get_gl().getUniformLocation(this.program,name);
		var _this2 = this.uniformLocations;
		if(__map_reserved[name] != null) {
			_this2.setReserved(name,location);
		} else {
			_this2.h[name] = location;
		}
		return location;
	}
	,useProgram: function() {
		this.get_gl().useProgram(this.program);
	}
	,getShader: function(shaderType,str) {
		var shader = this.get_gl().createShader(shaderType);
		this.get_gl().shaderSource(shader,str);
		this.get_gl().compileShader(shader);
		if(!this.get_gl().getShaderParameter(shader,35713)) {
			js_Browser.alert(this.get_gl().getShaderInfoLog(shader));
			return null;
		}
		return shader;
	}
	,__class__: src_graphics_shader_Shader
};
var src_graphics_states_TextureAddressMode = { __ename__ : true, __constructs__ : ["Wrap","Clamp","Mirror"] };
src_graphics_states_TextureAddressMode.Wrap = ["Wrap",0];
src_graphics_states_TextureAddressMode.Wrap.toString = $estr;
src_graphics_states_TextureAddressMode.Wrap.__enum__ = src_graphics_states_TextureAddressMode;
src_graphics_states_TextureAddressMode.Clamp = ["Clamp",1];
src_graphics_states_TextureAddressMode.Clamp.toString = $estr;
src_graphics_states_TextureAddressMode.Clamp.__enum__ = src_graphics_states_TextureAddressMode;
src_graphics_states_TextureAddressMode.Mirror = ["Mirror",2];
src_graphics_states_TextureAddressMode.Mirror.toString = $estr;
src_graphics_states_TextureAddressMode.Mirror.__enum__ = src_graphics_states_TextureAddressMode;
var src_graphics_states_TextureFilter = { __ename__ : true, __constructs__ : ["Linear","Point","Anisotropic","LinearMipPoint","PointMipLinear","MinLinearMagPointMipLinear","MinLinearMagPointMipPoint","MinPointMagLinearMipLinear","MinPointMagLinearMipPoint"] };
src_graphics_states_TextureFilter.Linear = ["Linear",0];
src_graphics_states_TextureFilter.Linear.toString = $estr;
src_graphics_states_TextureFilter.Linear.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.Point = ["Point",1];
src_graphics_states_TextureFilter.Point.toString = $estr;
src_graphics_states_TextureFilter.Point.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.Anisotropic = ["Anisotropic",2];
src_graphics_states_TextureFilter.Anisotropic.toString = $estr;
src_graphics_states_TextureFilter.Anisotropic.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.LinearMipPoint = ["LinearMipPoint",3];
src_graphics_states_TextureFilter.LinearMipPoint.toString = $estr;
src_graphics_states_TextureFilter.LinearMipPoint.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.PointMipLinear = ["PointMipLinear",4];
src_graphics_states_TextureFilter.PointMipLinear.toString = $estr;
src_graphics_states_TextureFilter.PointMipLinear.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.MinLinearMagPointMipLinear = ["MinLinearMagPointMipLinear",5];
src_graphics_states_TextureFilter.MinLinearMagPointMipLinear.toString = $estr;
src_graphics_states_TextureFilter.MinLinearMagPointMipLinear.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.MinLinearMagPointMipPoint = ["MinLinearMagPointMipPoint",6];
src_graphics_states_TextureFilter.MinLinearMagPointMipPoint.toString = $estr;
src_graphics_states_TextureFilter.MinLinearMagPointMipPoint.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.MinPointMagLinearMipLinear = ["MinPointMagLinearMipLinear",7];
src_graphics_states_TextureFilter.MinPointMagLinearMipLinear.toString = $estr;
src_graphics_states_TextureFilter.MinPointMagLinearMipLinear.__enum__ = src_graphics_states_TextureFilter;
src_graphics_states_TextureFilter.MinPointMagLinearMipPoint = ["MinPointMagLinearMipPoint",8];
src_graphics_states_TextureFilter.MinPointMagLinearMipPoint.toString = $estr;
src_graphics_states_TextureFilter.MinPointMagLinearMipPoint.__enum__ = src_graphics_states_TextureFilter;
var src_graphics_vertices_VertexDeclaration = function(vertexStride,elements) {
	this.shaderAttributeInfo = new haxe_ds_ObjectMap();
	if(elements == null || elements.length == 0) {
		throw new js__$Boot_HaxeError("Elements cannot be empty");
	}
	this.elements = elements;
	if(vertexStride == null) {
		this.vertexStride = this.getVertexStride(elements);
	} else {
		this.vertexStride = vertexStride;
	}
};
src_graphics_vertices_VertexDeclaration.__name__ = true;
src_graphics_vertices_VertexDeclaration.prototype = {
	getAttributeInfo: function(shader) {
		if(this.shaderAttributeInfo.h.__keys__[shader.__id__] != null) {
			return this.shaderAttributeInfo.h[shader.__id__];
		}
		var attrInfo = new src_graphics_vertices__$VertexDeclaration_VertexDeclarationAttributeInfo(src_graphics_GraphicsDevice.maxVertexAttributes);
		var _g = 0;
		var _g1 = this.elements;
		while(_g < _g1.length) {
			var ve = _g1[_g];
			++_g;
			var attributeLocation = shader.getAttribLocation(src_graphics_GraphicsExtensions.getName(ve.usage) + (ve.usageIndex >= 1 ? "" + ve.usageIndex : ""));
			if(attributeLocation < 0) {
				continue;
			}
			attrInfo.elements.push(new src_graphics_vertices__$VertexDeclaration_Element(ve.offset,attributeLocation,src_graphics_GraphicsExtensions.numberOfElements(ve.format),src_graphics_GraphicsExtensions.vertexAttribPointerType(ve.format),src_graphics_GraphicsExtensions.vertexAttribNormalized(ve)));
		}
		this.shaderAttributeInfo.set(shader,attrInfo);
		return attrInfo;
	}
	,apply: function(shader,offset) {
		var attrInfo = this.getAttributeInfo(shader);
		var _g_head = attrInfo.elements.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			var element = val;
			this.gd.vertexAttribPointer(element.attributeLocation,element.numberOfElements,element.vertexAttribPointerType,element.normalized,this.vertexStride,offset + element.offset);
		}
	}
	,getVertexStride: function(elements) {
		var max = 0;
		var _g1 = 0;
		var _g = elements.length;
		while(_g1 < _g) {
			var i = _g1++;
			var start = elements[i].offset + src_graphics_GraphicsExtensions.getSize(elements[i].format);
			if(max < start) {
				max = start;
			}
		}
		return max;
	}
	,__class__: src_graphics_vertices_VertexDeclaration
};
var src_graphics_vertices__$VertexDeclaration_VertexDeclarationAttributeInfo = function(maxVertexAttributes) {
	this.maxVertexAttributes = maxVertexAttributes;
	this.elements = new haxe_ds_List();
};
src_graphics_vertices__$VertexDeclaration_VertexDeclarationAttributeInfo.__name__ = true;
src_graphics_vertices__$VertexDeclaration_VertexDeclarationAttributeInfo.prototype = {
	__class__: src_graphics_vertices__$VertexDeclaration_VertexDeclarationAttributeInfo
};
var src_graphics_vertices__$VertexDeclaration_Element = function(offset,attributeLocation,numberOfElements,vertexAttribPointerType,normalized) {
	this.offset = offset;
	this.attributeLocation = attributeLocation;
	this.numberOfElements = numberOfElements;
	this.vertexAttribPointerType = vertexAttribPointerType;
	this.normalized = normalized;
};
src_graphics_vertices__$VertexDeclaration_Element.__name__ = true;
src_graphics_vertices__$VertexDeclaration_Element.prototype = {
	__class__: src_graphics_vertices__$VertexDeclaration_Element
};
var src_graphics_vertices_VertexElement = function(offset,elementFormat,elementUsage,usageIndex) {
	this.offset = offset;
	this.format = elementFormat;
	this.usage = elementUsage;
	this.usageIndex = usageIndex;
};
src_graphics_vertices_VertexElement.__name__ = true;
src_graphics_vertices_VertexElement.prototype = {
	equals: function(other) {
		if(this.offset == other.offset && this.format == other.format && this.usage == other.usage) {
			return this.usageIndex == other.usageIndex;
		} else {
			return false;
		}
	}
	,__class__: src_graphics_vertices_VertexElement
};
var src_graphics_vertices_VertexElementFormat = { __ename__ : true, __constructs__ : ["Single","Vector2","Vector3","Vector4","Color","Byte4","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4"] };
src_graphics_vertices_VertexElementFormat.Single = ["Single",0];
src_graphics_vertices_VertexElementFormat.Single.toString = $estr;
src_graphics_vertices_VertexElementFormat.Single.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Vector2 = ["Vector2",1];
src_graphics_vertices_VertexElementFormat.Vector2.toString = $estr;
src_graphics_vertices_VertexElementFormat.Vector2.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Vector3 = ["Vector3",2];
src_graphics_vertices_VertexElementFormat.Vector3.toString = $estr;
src_graphics_vertices_VertexElementFormat.Vector3.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Vector4 = ["Vector4",3];
src_graphics_vertices_VertexElementFormat.Vector4.toString = $estr;
src_graphics_vertices_VertexElementFormat.Vector4.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Color = ["Color",4];
src_graphics_vertices_VertexElementFormat.Color.toString = $estr;
src_graphics_vertices_VertexElementFormat.Color.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Byte4 = ["Byte4",5];
src_graphics_vertices_VertexElementFormat.Byte4.toString = $estr;
src_graphics_vertices_VertexElementFormat.Byte4.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Short2 = ["Short2",6];
src_graphics_vertices_VertexElementFormat.Short2.toString = $estr;
src_graphics_vertices_VertexElementFormat.Short2.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.Short4 = ["Short4",7];
src_graphics_vertices_VertexElementFormat.Short4.toString = $estr;
src_graphics_vertices_VertexElementFormat.Short4.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.NormalizedShort2 = ["NormalizedShort2",8];
src_graphics_vertices_VertexElementFormat.NormalizedShort2.toString = $estr;
src_graphics_vertices_VertexElementFormat.NormalizedShort2.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.NormalizedShort4 = ["NormalizedShort4",9];
src_graphics_vertices_VertexElementFormat.NormalizedShort4.toString = $estr;
src_graphics_vertices_VertexElementFormat.NormalizedShort4.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.HalfVector2 = ["HalfVector2",10];
src_graphics_vertices_VertexElementFormat.HalfVector2.toString = $estr;
src_graphics_vertices_VertexElementFormat.HalfVector2.__enum__ = src_graphics_vertices_VertexElementFormat;
src_graphics_vertices_VertexElementFormat.HalfVector4 = ["HalfVector4",11];
src_graphics_vertices_VertexElementFormat.HalfVector4.toString = $estr;
src_graphics_vertices_VertexElementFormat.HalfVector4.__enum__ = src_graphics_vertices_VertexElementFormat;
var src_graphics_vertices_VertexElementUsage = { __ename__ : true, __constructs__ : ["Position","Color","TextureCoordinate","Normal","Binormal","Tangent","BlendIndices","BlendWeight","Depth","Fog","PointSize","Sample","TessellateFactor"] };
src_graphics_vertices_VertexElementUsage.Position = ["Position",0];
src_graphics_vertices_VertexElementUsage.Position.toString = $estr;
src_graphics_vertices_VertexElementUsage.Position.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Color = ["Color",1];
src_graphics_vertices_VertexElementUsage.Color.toString = $estr;
src_graphics_vertices_VertexElementUsage.Color.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.TextureCoordinate = ["TextureCoordinate",2];
src_graphics_vertices_VertexElementUsage.TextureCoordinate.toString = $estr;
src_graphics_vertices_VertexElementUsage.TextureCoordinate.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Normal = ["Normal",3];
src_graphics_vertices_VertexElementUsage.Normal.toString = $estr;
src_graphics_vertices_VertexElementUsage.Normal.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Binormal = ["Binormal",4];
src_graphics_vertices_VertexElementUsage.Binormal.toString = $estr;
src_graphics_vertices_VertexElementUsage.Binormal.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Tangent = ["Tangent",5];
src_graphics_vertices_VertexElementUsage.Tangent.toString = $estr;
src_graphics_vertices_VertexElementUsage.Tangent.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.BlendIndices = ["BlendIndices",6];
src_graphics_vertices_VertexElementUsage.BlendIndices.toString = $estr;
src_graphics_vertices_VertexElementUsage.BlendIndices.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.BlendWeight = ["BlendWeight",7];
src_graphics_vertices_VertexElementUsage.BlendWeight.toString = $estr;
src_graphics_vertices_VertexElementUsage.BlendWeight.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Depth = ["Depth",8];
src_graphics_vertices_VertexElementUsage.Depth.toString = $estr;
src_graphics_vertices_VertexElementUsage.Depth.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Fog = ["Fog",9];
src_graphics_vertices_VertexElementUsage.Fog.toString = $estr;
src_graphics_vertices_VertexElementUsage.Fog.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.PointSize = ["PointSize",10];
src_graphics_vertices_VertexElementUsage.PointSize.toString = $estr;
src_graphics_vertices_VertexElementUsage.PointSize.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.Sample = ["Sample",11];
src_graphics_vertices_VertexElementUsage.Sample.toString = $estr;
src_graphics_vertices_VertexElementUsage.Sample.__enum__ = src_graphics_vertices_VertexElementUsage;
src_graphics_vertices_VertexElementUsage.TessellateFactor = ["TessellateFactor",12];
src_graphics_vertices_VertexElementUsage.TessellateFactor.toString = $estr;
src_graphics_vertices_VertexElementUsage.TessellateFactor.__enum__ = src_graphics_vertices_VertexElementUsage;
var src_graphics_vertices_VertexType = function() { };
src_graphics_vertices_VertexType.__name__ = true;
src_graphics_vertices_VertexType.prototype = {
	__class__: src_graphics_vertices_VertexType
};
var src_graphics_vertices_VertexPosition = function(position) {
	if(src_graphics_vertices_VertexPosition.dummy == null) {
		src_graphics_vertices_VertexPosition.dummy = this;
		src_graphics_vertices_VertexPosition.init();
	}
	this.position = position;
};
src_graphics_vertices_VertexPosition.__name__ = true;
src_graphics_vertices_VertexPosition.__interfaces__ = [src_graphics_vertices_VertexType];
src_graphics_vertices_VertexPosition.init = function() {
	var elements = [];
	elements.push(new src_graphics_vertices_VertexElement(0,src_graphics_vertices_VertexElementFormat.Vector3,src_graphics_vertices_VertexElementUsage.Position,0));
	src_graphics_vertices_VertexPosition.vertexDeclaration = new src_graphics_vertices_VertexDeclaration(3,elements);
};
src_graphics_vertices_VertexPosition.prototype = {
	iterator: function() {
		return HxOverrides.iter([this.position]);
	}
	,__class__: src_graphics_vertices_VertexPosition
};
var src_graphics_vertices_VertexPositionNormalTexture = function(position,normal,textureCoordinate) {
	if(src_graphics_vertices_VertexPositionNormalTexture.dummy == null) {
		src_graphics_vertices_VertexPositionNormalTexture.dummy = this;
		src_graphics_vertices_VertexPositionNormalTexture.init();
	}
	this.position = position;
	this.normal = normal;
	this.textureCoordinate = textureCoordinate;
};
src_graphics_vertices_VertexPositionNormalTexture.__name__ = true;
src_graphics_vertices_VertexPositionNormalTexture.__interfaces__ = [src_graphics_vertices_VertexType];
src_graphics_vertices_VertexPositionNormalTexture.init = function() {
	var elements = [];
	elements.push(new src_graphics_vertices_VertexElement(0,src_graphics_vertices_VertexElementFormat.Vector3,src_graphics_vertices_VertexElementUsage.Position,0));
	elements.push(new src_graphics_vertices_VertexElement(12,src_graphics_vertices_VertexElementFormat.Vector3,src_graphics_vertices_VertexElementUsage.Normal,0));
	elements.push(new src_graphics_vertices_VertexElement(24,src_graphics_vertices_VertexElementFormat.Vector2,src_graphics_vertices_VertexElementUsage.TextureCoordinate,0));
	src_graphics_vertices_VertexPositionNormalTexture.vertexDeclaration = new src_graphics_vertices_VertexDeclaration(null,elements);
};
src_graphics_vertices_VertexPositionNormalTexture.prototype = {
	iterator: function() {
		var array = [this.position,this.normal,this.textureCoordinate];
		return HxOverrides.iter(array);
	}
	,__class__: src_graphics_vertices_VertexPositionNormalTexture
};
var src_math__$Mat4_Mat4_$Impl_$ = {};
src_math__$Mat4_Mat4_$Impl_$.__name__ = true;
src_math__$Mat4_Mat4_$Impl_$.get_identity = function() {
	var this1 = new src_math_Mat4Data([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$._new = function(m) {
	var this1 = new src_math_Mat4Data(m);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.toArray = function(this1) {
	return this1.m;
};
src_math__$Mat4_Mat4_$Impl_$.fromArray = function(m) {
	var this1 = new src_math_Mat4Data(m);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.minus = function(m) {
	var this1 = new src_math_Mat4Data(null);
	var m2 = this1;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		m2.m[i] = -m.m[i];
	}
	return m2;
};
src_math__$Mat4_Mat4_$Impl_$.add = function(m1,m2) {
	var this1 = new src_math_Mat4Data(null);
	var m3 = this1;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		m3.m[i] = m1.m[i] + m2.m[i];
	}
	return m3;
};
src_math__$Mat4_Mat4_$Impl_$.sub = function(m1,m2) {
	var this1 = new src_math_Mat4Data(null);
	var m3 = this1;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		m3.m[i] = m1.m[i] - m2.m[i];
	}
	return m3;
};
src_math__$Mat4_Mat4_$Impl_$.mult = function(m1,m2) {
	var this1 = new src_math_Mat4Data(null);
	var m3 = this1;
	var _g = 0;
	while(_g < 4) {
		var i = _g++;
		var _g1 = 0;
		while(_g1 < 4) {
			var j = _g1++;
			var temp = 0.0;
			var _g2 = 0;
			while(_g2 < 4) {
				var k = _g2++;
				temp += m1.m[i * 4 + k] * m2.m[k * 4 + j];
			}
			m3.m[i * 4 + j] = temp;
		}
	}
	return m3;
};
src_math__$Mat4_Mat4_$Impl_$.multScalar = function(m,x) {
	var this1 = new src_math_Mat4Data(null);
	var m2 = this1;
	var _g = 0;
	while(_g < 16) {
		var i = _g++;
		m2.m[i] = m.m[i] * x;
	}
	return m2;
};
src_math__$Mat4_Mat4_$Impl_$.translate = function(v) {
	var this1 = new src_math_Mat4Data([1,0,0,0,0,1,0,0,0,0,1,0,v.x,v.y,v.z,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.rotateX = function(t) {
	var s = Math.sin(t);
	var c = Math.cos(t);
	var this1 = new src_math_Mat4Data([1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.rotateY = function(t) {
	var s = Math.sin(t);
	var c = Math.cos(t);
	var this1 = new src_math_Mat4Data([c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.rotateZ = function(t) {
	var s = Math.sin(t);
	var c = Math.cos(t);
	var this1 = new src_math_Mat4Data([c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.scale = function(v) {
	var this1 = new src_math_Mat4Data([v.x,0,0,0,0,v.y,0,0,0,0,v.z,0,0,0,0,1]);
	return this1;
};
src_math__$Mat4_Mat4_$Impl_$.lookAt = function(camera) {
	var eye = camera.position;
	var forward = camera.forward;
	var up = camera.up;
	var this1 = new src_math_Vec3Data(up.y * forward.z - up.z * forward.y,up.z * forward.x - up.x * forward.z,up.x * forward.y - up.y * forward.x);
	var this2 = this1;
	var l = Math.sqrt(this2.x * this2.x + this2.y * this2.y + this2.z * this2.z);
	var this3 = new src_math_Vec3Data(this2.x / l,this2.y / l,this2.z / l);
	var side = this3;
	var this4 = new src_math_Vec3Data(forward.y * side.z - forward.z * side.y,forward.z * side.x - forward.x * side.z,forward.x * side.y - forward.y * side.x);
	var this5 = this4;
	var l1 = Math.sqrt(this5.x * this5.x + this5.y * this5.y + this5.z * this5.z);
	var this6 = new src_math_Vec3Data(this5.x / l1,this5.y / l1,this5.z / l1);
	up = this6;
	var this7 = new src_math_Mat4Data([side.x,up.x,forward.x,0,side.y,up.y,forward.y,0,side.z,up.z,forward.z,0,-(eye.x * side.x + eye.y * side.y + eye.z * side.z),-(eye.x * up.x + eye.y * up.y + eye.z * up.z),-(eye.x * forward.x + eye.y * forward.y + eye.z * forward.z),1]);
	return this7;
};
src_math__$Mat4_Mat4_$Impl_$.perspective = function(asp,fov,near,far) {
	var t = Math.tan(fov / 2);
	var this1 = new src_math_Mat4Data([1 / (asp * t),0,0,0,0,1 / t,0,0,0,0,(near + far) / (near - far),-1,0,0,2 * near * far / (near - far),0]);
	return this1;
};
var src_math_Mat4Data = function(m) {
	this.m = m == null ? [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] : m;
};
src_math_Mat4Data.__name__ = true;
src_math_Mat4Data.prototype = {
	iterator: function() {
		return HxOverrides.iter(this.m);
	}
	,__class__: src_math_Mat4Data
};
var src_math__$Vec2_Vec2_$Impl_$ = {};
src_math__$Vec2_Vec2_$Impl_$.__name__ = true;
src_math__$Vec2_Vec2_$Impl_$._new = function(x,y) {
	var this1 = new src_math_Vec2Data(x,y);
	return this1;
};
src_math__$Vec2_Vec2_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
};
src_math__$Vec2_Vec2_$Impl_$.normalize = function(this1) {
	var l = Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	var this2 = new src_math_Vec2Data(this1.x / l,this1.y / l);
	return this2;
};
src_math__$Vec2_Vec2_$Impl_$.minus = function(v) {
	var this1 = new src_math_Vec2Data(-v.x,-v.y);
	return this1;
};
src_math__$Vec2_Vec2_$Impl_$.add = function(v1,v2) {
	var this1 = new src_math_Vec2Data(v1.x + v2.x,v1.y + v2.y);
	return this1;
};
src_math__$Vec2_Vec2_$Impl_$.sub = function(v1,v2) {
	var this1 = new src_math_Vec2Data(v1.x - v2.x,v1.y - v2.y);
	return this1;
};
src_math__$Vec2_Vec2_$Impl_$.dot = function(this1,v) {
	return this1.x * v.x + this1.y * v.y;
};
src_math__$Vec2_Vec2_$Impl_$.cross = function(this1,v) {
	return this1.x * v.y - this1.y * v.x;
};
var src_math_Vec2Data = function(x,y) {
	this.x = x;
	this.y = y;
};
src_math_Vec2Data.__name__ = true;
src_math_Vec2Data.prototype = {
	iterator: function() {
		return HxOverrides.iter([this.x,this.y]);
	}
	,__class__: src_math_Vec2Data
};
var src_math__$Vec3_Vec3_$Impl_$ = {};
src_math__$Vec3_Vec3_$Impl_$.__name__ = true;
src_math__$Vec3_Vec3_$Impl_$._new = function(x,y,z) {
	var this1 = new src_math_Vec3Data(x,y,z);
	return this1;
};
src_math__$Vec3_Vec3_$Impl_$.$length = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
};
src_math__$Vec3_Vec3_$Impl_$.normalize = function(this1) {
	var l = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
	var this2 = new src_math_Vec3Data(this1.x / l,this1.y / l,this1.z / l);
	return this2;
};
src_math__$Vec3_Vec3_$Impl_$.minus = function(v) {
	var this1 = new src_math_Vec3Data(-v.x,-v.y,-v.z);
	return this1;
};
src_math__$Vec3_Vec3_$Impl_$.add = function(v1,v2) {
	var this1 = new src_math_Vec3Data(v1.x + v2.x,v1.y + v2.y,v1.z + v2.z);
	return this1;
};
src_math__$Vec3_Vec3_$Impl_$.sub = function(v1,v2) {
	var this1 = new src_math_Vec3Data(v1.x - v2.x,v1.y - v2.y,v1.z - v2.z);
	return this1;
};
src_math__$Vec3_Vec3_$Impl_$.dot = function(this1,v) {
	return this1.x * v.x + this1.y * v.y + this1.z * v.z;
};
src_math__$Vec3_Vec3_$Impl_$.cross = function(this1,v) {
	var this2 = new src_math_Vec3Data(this1.y * v.z - this1.z * v.y,this1.z * v.x - this1.x * v.z,this1.x * v.y - this1.y * v.x);
	return this2;
};
var src_math_Vec3Data = function(x,y,z) {
	this.x = x;
	this.y = y;
	this.z = z;
};
src_math_Vec3Data.__name__ = true;
src_math_Vec3Data.prototype = {
	iterator: function() {
		return HxOverrides.iter([this.x,this.y,this.z]);
	}
	,__class__: src_math_Vec3Data
};
var src_parser_Lexer = function(tokenTypeList,text) {
	this.offset = 0;
	this.text = "";
	this.tokenTypeList = tokenTypeList;
};
src_parser_Lexer.__name__ = true;
src_parser_Lexer.prototype = {
	skipWhiteSpace: function(text) {
		var first = text.charAt(0);
		while(first == " " || first == "\n" || first == "\t") {
			text = HxOverrides.substr(text,1,null);
			first = text.charAt(0);
		}
		return text;
	}
	,skipComment: function(text) {
		var first = text.charAt(0);
		if(first == "/") {
			if(text.charAt(1) == "/") {
				while(first != "\n") {
					text = HxOverrides.substr(text,1,null);
					first = text.charAt(0);
				}
			} else if(text.charAt(1) == "*") {
				var second = text.charAt(1);
				while(!(first == "*" && second == "/")) {
					text = HxOverrides.substr(text,1,null);
					first = text.charAt(0);
					second = text.charAt(1);
				}
				text = HxOverrides.substr(text,2,null);
			}
		}
		return text;
	}
	,nextToken: function() {
		if(this.text == "") {
			return null;
		}
		var word = "";
		var token = new src_parser_Token(null,this.offset,0,"");
		var length = this.text.length;
		while(true) {
			this.text = this.skipComment(this.text);
			this.text = this.skipWhiteSpace(this.text);
			if(!(this.text.length != length)) {
				break;
			}
		}
		var _g1 = 0;
		var _g = length;
		while(_g1 < _g) {
			var i = _g1++;
			var isMatched = false;
			var isMatchedWithNextChar = false;
			var nextChar = this.text.charAt(0);
			var _g2_head = this.tokenTypeList.h;
			while(_g2_head != null) {
				var val = _g2_head.item;
				_g2_head = _g2_head.next;
				var tokenType = val;
				if(tokenType.regExp.match(word)) {
					isMatched = true;
					if(tokenType.regExp.match(word + nextChar)) {
						isMatchedWithNextChar = true;
					} else {
						token.kind = tokenType.kind;
						token.offsetEnd = this.offset + i;
						token.lexeme = word;
					}
				}
			}
			if(isMatched && !isMatchedWithNextChar) {
				break;
			}
			this.text = HxOverrides.substr(this.text,1,null);
			word += nextChar;
		}
		this.offset = token.offsetEnd;
		return token;
	}
	,__class__: src_parser_Lexer
};
var src_parser_MQOParser = function() { };
src_parser_MQOParser.__name__ = true;
var src_parser_Token = function(kind,offsetBegin,offsetEnd,lexeme) {
	this.kind = kind;
	this.offsetBegin = offsetBegin;
	this.offsetEnd = offsetEnd;
	this.lexeme = lexeme;
};
src_parser_Token.__name__ = true;
src_parser_Token.prototype = {
	__class__: src_parser_Token
};
var src_parser_TokenType = function() { };
src_parser_TokenType.__name__ = true;
src_parser_TokenType.prototype = {
	__class__: src_parser_TokenType
};
var src_scene_Scene = function() {
	this.camera = new src_camera_Camera();
};
src_scene_Scene.__name__ = true;
src_scene_Scene.prototype = {
	setCamera: function(position,forward,up) {
		if(position != null) {
			this.camera.position = position;
		}
		if(position != null) {
			this.camera.forward = forward;
		}
		if(position != null) {
			this.camera.up = up;
		}
	}
	,__class__: src_scene_Scene
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
var __map_reserved = {};
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) {
	ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
}
var DataView = $global.DataView || js_html_compat_DataView;
var Float32Array = $global.Float32Array || js_html_compat_Float32Array._new;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var this1 = new haxe__$Int64__$_$_$Int64(0,0);
	$r = this1;
	return $r;
}(this));
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
js_Boot.__toStr = ({ }).toString;
js_html_compat_Float32Array.BYTES_PER_ELEMENT = 4;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
src_graphics_Texture.rc = WebGLRenderingContext;
src_graphics_vertices_VertexPosition.dummy = new src_graphics_vertices_VertexPosition(null);
src_graphics_vertices_VertexPositionNormalTexture.dummy = new src_graphics_vertices_VertexPositionNormalTexture(null,null,null);
src_Game.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
